"""
Django settings for sites project.

Generated by 'django-admin startproject' using Django 4.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import sys
import os
from pathlib import Path

from loguru import logger
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$yncp%i+i3z1x+mp!#nzwxnjr8y!ljzs$tv!)jeg$c@jp$iu&1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

BASE_URL = 'https://127.0.0.1:8000/'
# BASE_URL = 'https://bizdate.ru/'


ALLOWED_HOSTS = ["*"]

# TELEGRAM_TOKEN = "5775772602:AAEvxiB28XkRn543QlXq6IeylqEeaUSP688"
# TELEGRAM_TOKEN = "5873350112:AAG6t6FrPMwPyb4Q46mOjg4grpZWTEsXKAE" #DATING
TELEGRAM_TOKEN = "5355855082:AAFmoHLMvYEQv8tBKdSeAddTdtblsUGJMWY"
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
    'bot',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sites.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sites.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Asia/Tomsk'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/


STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media').replace('\\', '/')
# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

logger.remove()
logger.add("log/file_info.log", format="{time:DD.MM.YY} - {time:HH:mm:ss} | {file}:{function}:{line} {level} {message}", level="INFO", filter=lambda record: record["level"].name == "INFO", rotation="10 MB", retention="30 days")
logger.add("log/file_error.log", format="{time:DD.MM.YY} - {time:HH:mm:ss} | {file}:{function}:{line} {level} {message}", level="ERROR", diagnose=True, enqueue=True, rotation="10 MB", retention="90 days")
logger.add("log/file_success.log", format="{time:DD.MM.YY} - {time:HH:mm:ss} | {file}:{function}:{line} {level} {message}", level="SUCCESS", filter=lambda record: record["level"].name == "SUCCESS", diagnose=True, enqueue=True, rotation="10 MB", retention="90 days")
logger.add("log/file_debug.log", format="{time:DD.MM.YY} - {time:HH:mm:ss} | {file}:{function}:{line} {level} {message}", level="DEBUG", filter=lambda record: record["level"].name == "DEBUG", diagnose=True, enqueue=True, rotation="10 MB", retention="10 days")
logger.add(sys.stderr, format = "{time:HH:mm:ss} <red>[{level}]</red> {file}:{function}:{line}: <green>{message}</green>", filter=lambda record: record["level"].name == "DEBUG", colorize=True)
