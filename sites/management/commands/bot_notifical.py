from django.db.models.signals import post_save
from django.dispatch import receiver


from loguru import logger
from telebot import types

from django.db.models import Q
from users.models import DatingCard_StartUp


from bot.management.commands import geo
from bot.management.commands import custom_keyboard as ck
from bot.management.commands.bot_connection import bot


@logger.catch
def start(message):
    user_id = message.from_user.id
    match_obj = DatingCard_StartUp.objects.filter(match_profile = True, match_start_up = True).filter(
        Q(start_up__ceo__external_id = user_id) |
        Q(card__profile__external_id = user_id)
        ).order_by("-match_start_up_datetime")[:10]
    logger.debug(match_obj)
    for item in match_obj:
        text = ""
        text += f"‚úÖ {item.start_up.name}\n{item.start_up.idea}\n"
        text += f"üí° {item.start_up.ceo.name} @{item.start_up.ceo.username}\n"
        text += f"üë§ {item.card.profile.name} @{item.card.profile.username}\n"
        
        x_A = str(item.start_up.ceo.location_lat).replace(',','.')
        y_A = str(item.start_up.ceo.location_lon).replace(',','.')
        x_B = str(item.card.profile.location_lat).replace(',','.')
        y_B = str(item.card.profile.location_lon).replace(',','.')

        text += f"–ì–æ—Ä–æ–¥: {geo.get_city(x_A, y_A)}\n"
        text += f"–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: {geo.get_distance(x_A, y_A, x_B, y_B)}\n"
        bot.send_message(message.from_user.id, text)

    if not match_obj:
        text = '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –µ—â–µ –Ω–µ—Ç'
        bot.send_message(message.from_user.id, text)


@logger.catch
@receiver(post_save, sender=DatingCard_StartUp)
def send_match(sender, instance, created, **kwargs):
    if instance.match_start_up and instance.match_profile:
        text_sctartUp = "–ö—Ç–æ-—Ç–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è –í–∞—à–∏–º —Å—Ç–∞—Ä—Ç–∞–ø–æ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
        text_profile = "–ö—Ç–æ-—Ç–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è –í–∞—à–∏–º –ø—Ä–æ—Ñ–∏–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
        bot.send_message(instance.start_up.ceo.external_id, text=text_sctartUp)
        bot.send_message(instance.card.profile.external_id, text=text_profile)
    if instance.card.role == "I" and created:
        keyboard = types.InlineKeyboardMarkup()
        like_button = types.InlineKeyboardButton(text='–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—èüíö', callback_data=f'match_{instance.pk}')
        btn = types.InlineKeyboardButton(text=f"‚ùå–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f'escape')
        keyboard.add(like_button, btn)
        

        x_A = str(instance.card.profile.location_lat).replace(',', '.')
        y_A = str(instance.card.profile.location_lon).replace(',', '.')
        msg = f"‚ùï–í–∞—à–∏–º —Å—Ç–∞—Ä—Ç–∞–ø–æ–º –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è –∏–Ω–≤–µ—Å—Ç–æ—Ä:\n"
        msg += f"üë§{instance.card.profile.name}\n"
        msg += f"üí¨{instance.card.profile.description}\n"
        msg += f"üèô –ì–æ—Ä–æ–¥: {geo.get_city(x_A, y_A)[0]} , {geo.get_city(x_A, y_A)[1]}"
        bot.send_message(instance.start_up.ceo.external_id, text=msg, reply_markup=keyboard)
